# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.20)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget MonopodSdk::MonopodSdk MonopodSdk::demo_leg_sine_position MonopodSdk::demo_print_sdk MonopodSdk::MonopodDrivers MonopodSdk::utils MonopodSdk::devices)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target MonopodSdk::MonopodSdk
add_library(MonopodSdk::MonopodSdk SHARED IMPORTED)

set_target_properties(MonopodSdk::MonopodSdk PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/dawson/Documents/Repos/os2r-superbuild/src/monopod_sdk/include"
  INTERFACE_LINK_LIBRARIES "MonopodSdk::devices;MonopodSdk::MonopodDrivers"
)

# Create imported target MonopodSdk::demo_leg_sine_position
add_executable(MonopodSdk::demo_leg_sine_position IMPORTED)

set_target_properties(MonopodSdk::demo_leg_sine_position PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/dawson/Documents/Repos/os2r-superbuild/src/monopod_sdk/include;/home/dawson/Documents/Repos/os2r-superbuild/src/monopod_sdk/demos"
)

# Create imported target MonopodSdk::demo_print_sdk
add_executable(MonopodSdk::demo_print_sdk IMPORTED)

set_target_properties(MonopodSdk::demo_print_sdk PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/dawson/Documents/Repos/os2r-superbuild/src/monopod_sdk/include;/home/dawson/Documents/Repos/os2r-superbuild/src/monopod_sdk/demos"
)

# Create imported target MonopodSdk::MonopodDrivers
add_library(MonopodSdk::MonopodDrivers SHARED IMPORTED)

set_target_properties(MonopodSdk::MonopodDrivers PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/dawson/Documents/Repos/os2r-superbuild/src/monopod_sdk/include"
  INTERFACE_LINK_LIBRARIES "MonopodSdk::devices;MonopodSdk::utils"
)

# Create imported target MonopodSdk::utils
add_library(MonopodSdk::utils SHARED IMPORTED)

set_target_properties(MonopodSdk::utils PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/dawson/Documents/Repos/os2r-superbuild/src/monopod_sdk/include"
  INTERFACE_LINK_LIBRARIES "real_time_tools::real_time_tools"
)

# Create imported target MonopodSdk::devices
add_library(MonopodSdk::devices SHARED IMPORTED)

set_target_properties(MonopodSdk::devices PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/dawson/Documents/Repos/os2r-superbuild/src/monopod_sdk/include"
  INTERFACE_LINK_LIBRARIES "MonopodSdk::utils;real_time_tools::real_time_tools;time_series::time_series;Eigen3::Eigen;Threads::Threads"
)

# Import target "MonopodSdk::MonopodSdk" for configuration "Release"
set_property(TARGET MonopodSdk::MonopodSdk APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MonopodSdk::MonopodSdk PROPERTIES
  IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE "time_series::time_series;real_time_tools::real_time_tools"
  IMPORTED_LOCATION_RELEASE "/home/dawson/Documents/Repos/os2r-superbuild/build/src/monopod_sdk/lib/libMonopodSdk.so"
  IMPORTED_SONAME_RELEASE "libMonopodSdk.so"
  )

# Import target "MonopodSdk::demo_leg_sine_position" for configuration "Release"
set_property(TARGET MonopodSdk::demo_leg_sine_position APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MonopodSdk::demo_leg_sine_position PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/dawson/Documents/Repos/os2r-superbuild/build/src/monopod_sdk/bin/demo_leg_sine_position"
  )

# Import target "MonopodSdk::demo_print_sdk" for configuration "Release"
set_property(TARGET MonopodSdk::demo_print_sdk APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MonopodSdk::demo_print_sdk PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/dawson/Documents/Repos/os2r-superbuild/build/src/monopod_sdk/bin/demo_print_sdk"
  )

# Import target "MonopodSdk::MonopodDrivers" for configuration "Release"
set_property(TARGET MonopodSdk::MonopodDrivers APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MonopodSdk::MonopodDrivers PROPERTIES
  IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE "real_time_tools::real_time_tools;time_series::time_series"
  IMPORTED_LOCATION_RELEASE "/home/dawson/Documents/Repos/os2r-superbuild/build/src/monopod_sdk/lib/libMonopodDrivers.so"
  IMPORTED_SONAME_RELEASE "libMonopodDrivers.so"
  )

# Import target "MonopodSdk::utils" for configuration "Release"
set_property(TARGET MonopodSdk::utils APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MonopodSdk::utils PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/dawson/Documents/Repos/os2r-superbuild/build/src/monopod_sdk/lib/libutils.so"
  IMPORTED_SONAME_RELEASE "libutils.so"
  )

# Import target "MonopodSdk::devices" for configuration "Release"
set_property(TARGET MonopodSdk::devices APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MonopodSdk::devices PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/dawson/Documents/Repos/os2r-superbuild/build/src/monopod_sdk/lib/libdevices.so"
  IMPORTED_SONAME_RELEASE "libdevices.so"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
