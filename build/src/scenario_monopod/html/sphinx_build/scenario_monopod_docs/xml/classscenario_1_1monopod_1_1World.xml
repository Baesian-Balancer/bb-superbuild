<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classscenario_1_1monopod_1_1World" kind="class" language="C++" prot="public" final="yes">
    <compoundname>scenario::monopod::World</compoundname>
    <basecompoundref prot="public" virt="non-virtual">World</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; scenario::monopod::World &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classscenario_1_1monopod_1_1World_1a698940a07f972c7ad8574175254f71e8" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; scenario::monopod::World::pImpl</definition>
        <argsstring></argsstring>
        <name>pImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="77" column="19" bodyfile="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classscenario_1_1monopod_1_1World_1a2525046d89d948c95920245efd9c1455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scenario::monopod::World::World</definition>
        <argsstring>()</argsstring>
        <name>World</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="21" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classscenario_1_1monopod_1_1World_1a387bcc2547ec347d700669539cb8cecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual scenario::monopod::World::~World</definition>
        <argsstring>()</argsstring>
        <name>~World</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="22" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classscenario_1_1monopod_1_1World_1a295c55e3a66a650d8f34e6b7e47e1874" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool scenario::monopod::World::initialize</definition>
        <argsstring>(const monopod_drivers::Mode &amp;mode, const bool &amp;dummy_mode=false) const</argsstring>
        <name>initialize</name>
        <param>
          <type>const monopod_drivers::Mode &amp;</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>dummy_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Initialize can_bus connections to encoder board and motor board. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>monopod_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the task mode of the monopod. Can also specify individual boards. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dummy_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>if false the sdk will try to connect to the canbus connection otherwise it will just create a dummy board class which fakes the real robot. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="33" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classscenario_1_1monopod_1_1World_1ae1891d84bcbb6e61518593d373348282" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool scenario::monopod::World::valid</definition>
        <argsstring>() const override</argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the world is valid.</para>
<para><simplesect kind="return"><para>True if the world is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="40" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classscenario_1_1monopod_1_1World_1adf92116664d9f7b61a3c00cf6b601160" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string scenario::monopod::World::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the world.</para>
<para><simplesect kind="return"><para>The name of the world. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="47" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classscenario_1_1monopod_1_1World_1a04d7ef45bd6ef6a5beac062842b3d766" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; scenario::monopod::World::modelNames</definition>
        <argsstring>() const override</argsstring>
        <name>modelNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the models that are part of the world.</para>
<para><simplesect kind="return"><para>The list of model names. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="54" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classscenario_1_1monopod_1_1World_1ae5ae9757ac965d035e9183d7bcd48250" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>scenario::core::ModelPtr</type>
        <definition>scenario::core::ModelPtr scenario::monopod::World::getModel</definition>
        <argsstring>(const std::string &amp;modelName) const override</argsstring>
        <name>getModel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>modelName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a model part of the world.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the model to get. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The model if it is part of the world, <computeroutput>nullptr</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="63" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classscenario_1_1monopod_1_1World_1a6067f0f6cdb1048ee876bb67b977461b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; scenario::core::ModelPtr &gt;</type>
        <definition>std::vector&lt;scenario::core::ModelPtr&gt; scenario::monopod::World::models</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;modelNames={}) const override</argsstring>
        <name>models</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>modelNames</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the models of the world.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelNames</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vector of considered models. By default, <computeroutput><ref refid="classscenario_1_1monopod_1_1World_1a04d7ef45bd6ef6a5beac062842b3d766" kindref="member">World::modelNames</ref></computeroutput> is used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector of pointers to the model objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="72" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classscenario_1_1monopod_1_1World_1aaddccf42a08948770da1a122adfed37d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double scenario::monopod::World::time</definition>
        <argsstring>() const override</argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="82" column="10" bodyfile="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classscenario_1_1monopod_1_1World_1abca11e07bde632e1f60cb02b3e6aa5be" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; double, 3 &gt;</type>
        <definition>std::array&lt; double, 3 &gt; scenario::monopod::World::gravity</definition>
        <argsstring>() const override</argsstring>
        <name>gravity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="83" column="14" bodyfile="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" bodystart="87" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>scenario::core::World</label>
      </node>
      <node id="1">
        <label>scenario::monopod::World</label>
        <link refid="classscenario_1_1monopod_1_1World"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::enable_shared_from_this&lt; scenario::monopod::World &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>scenario::core::World</label>
      </node>
      <node id="1">
        <label>scenario::monopod::World</label>
        <link refid="classscenario_1_1monopod_1_1World"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::enable_shared_from_this&lt; scenario::monopod::World &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" line="19" column="43" bodyfile="/home/dawson/Documents/Repos/os2r-superbuild/src/scenario_monopod/src/monopod/include/scenario/monopod/World.h" bodystart="17" bodyend="84"/>
    <listofallmembers>
      <member refid="classscenario_1_1monopod_1_1World_1ae5ae9757ac965d035e9183d7bcd48250" prot="public" virt="non-virtual"><scope>scenario::monopod::World</scope><name>getModel</name></member>
      <member refid="classscenario_1_1monopod_1_1World_1abca11e07bde632e1f60cb02b3e6aa5be" prot="private" virt="non-virtual"><scope>scenario::monopod::World</scope><name>gravity</name></member>
      <member refid="classscenario_1_1monopod_1_1World_1a295c55e3a66a650d8f34e6b7e47e1874" prot="public" virt="non-virtual"><scope>scenario::monopod::World</scope><name>initialize</name></member>
      <member refid="classscenario_1_1monopod_1_1World_1a04d7ef45bd6ef6a5beac062842b3d766" prot="public" virt="non-virtual"><scope>scenario::monopod::World</scope><name>modelNames</name></member>
      <member refid="classscenario_1_1monopod_1_1World_1a6067f0f6cdb1048ee876bb67b977461b" prot="public" virt="non-virtual"><scope>scenario::monopod::World</scope><name>models</name></member>
      <member refid="classscenario_1_1monopod_1_1World_1adf92116664d9f7b61a3c00cf6b601160" prot="public" virt="non-virtual"><scope>scenario::monopod::World</scope><name>name</name></member>
      <member refid="classscenario_1_1monopod_1_1World_1a698940a07f972c7ad8574175254f71e8" prot="private" virt="non-virtual"><scope>scenario::monopod::World</scope><name>pImpl</name></member>
      <member refid="classscenario_1_1monopod_1_1World_1aaddccf42a08948770da1a122adfed37d" prot="private" virt="non-virtual"><scope>scenario::monopod::World</scope><name>time</name></member>
      <member refid="classscenario_1_1monopod_1_1World_1ae1891d84bcbb6e61518593d373348282" prot="public" virt="non-virtual"><scope>scenario::monopod::World</scope><name>valid</name></member>
      <member refid="classscenario_1_1monopod_1_1World_1a2525046d89d948c95920245efd9c1455" prot="public" virt="non-virtual"><scope>scenario::monopod::World</scope><name>World</name></member>
      <member refid="classscenario_1_1monopod_1_1World_1a387bcc2547ec347d700669539cb8cecd" prot="public" virt="virtual"><scope>scenario::monopod::World</scope><name>~World</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
